function transformTypedChar(charStr) {
	return /[a-z]/.test(charStr) ? charStr.toUpperCase() : charStr;
}

function convertUppercaseElement(e, obj) {
	var val = obj.value;
	evt = e || window.event;
	
	var charCode = typeof evt.which == "number" ? evt.which : evt.keyCode;
        if (val.length >= obj.maxLength){
            if (charCode >= 32 && charCode <= 126)
	       return false;
	}
        
        var evtObject = window.event?window.event:e;
        if(evtObject.ctrlKey || evtObject.altKey || evtObject.shiftKey || evtObject.metaKey)
    	{
        	charCode = 0;
    	}     

	// Ensure we only handle printable keys, excluding enter and space
	if (charCode && charCode > 32) {
		var keyChar = String.fromCharCode(charCode);

		// Transform typed character
		var mappedChar = transformTypedChar(keyChar);

		var start, end;
		if (typeof obj.selectionStart == "number"
				&& typeof obj.selectionEnd == "number") {
			// Non-IE browsers and IE 9
			
			start = obj.selectionStart;
			end = obj.selectionEnd;
			obj.value = val.slice(0, start) + mappedChar + val.slice(end);

			// Move the caret
			obj.selectionStart = obj.selectionEnd = start + 1;
		} else if (document.selection && document.selection.createRange) {
			// For IE up to version 8
			var selectionRange = document.selection.createRange();
			var textInputRange = obj.createTextRange();
			var precedingRange = obj.createTextRange();
			var bookmark = selectionRange.getBookmark();
			textInputRange.moveToBookmark(bookmark);
			precedingRange.setEndPoint("EndToStart", textInputRange);
			start = precedingRange.text.length;
			end = start + selectionRange.text.length;

			obj.value = val.slice(0, start) + mappedChar + val.slice(end);
			start++;

			// Move the caret
			textInputRange = obj.createTextRange();
			textInputRange.collapse(true);
			textInputRange.move("character", start
					- (obj.value.slice(0, start).split("\r\n").length - 1));
			textInputRange.select();
		}

		return false;
	}
}

//customized logout behavior. if a page has its logout() javascript function defined,
//it will be called by this validateLogout() function.
function validateLogout() {
	// logout is the function to call to customize logout behavior for a page
	if(typeof logout == 'function') {
		return logout();
	} 
	return true;
}
